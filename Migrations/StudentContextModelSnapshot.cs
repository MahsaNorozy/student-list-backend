// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using student_list_backend.Contexts;

#nullable disable

namespace student_list_backend.Migrations
{
    [DbContext(typeof(StudentContext))]
    partial class StudentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.18");

            modelBuilder.Entity("student_list_backend.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GradeValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPassed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseName = "Mathe 1",
                            Date = "2024-02-10",
                            GradeValue = "1.3",
                            IsPassed = true,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseName = "Programmierung",
                            Date = "2024-02-15",
                            GradeValue = "2.0",
                            IsPassed = true,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseName = "Mechanik",
                            Date = "2024-03-12",
                            GradeValue = "2.3",
                            IsPassed = true,
                            StudentId = 2
                        });
                });

            modelBuilder.Entity("student_list_backend.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MatriculationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Semester")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Musterstraße 1, 12345 Berlin",
                            Email = "anna@beispiel.de",
                            Gender = 1,
                            MatriculationNumber = "1234567",
                            Name = "Anna Schmidt",
                            Program = "Informatik",
                            Semester = 2
                        },
                        new
                        {
                            Id = 2,
                            Address = "Beispielweg 2, 54321 Hamburg",
                            Email = "max@beispiel.de",
                            Gender = 2,
                            MatriculationNumber = "2345678",
                            Name = "Max Müller",
                            Program = "Maschinenbau",
                            Semester = 3
                        });
                });

            modelBuilder.Entity("student_list_backend.Models.Grade", b =>
                {
                    b.HasOne("student_list_backend.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("student_list_backend.Models.Student", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
